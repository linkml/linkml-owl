id: https://w3id.org/linkml/owl/tests
name: OwlTest
description: |-
  OWL Tests
imports:
  - linkml:types
prefixes:
  linkml: https://w3id.org/linkml/
  test: https://w3id.org/linkml/owl/tests/
  BFO: http://purl.obolibrary.org/obo/BFO_
  IAO: http://purl.obolibrary.org/obo/IAO_
  RO: http://purl.obolibrary.org/obo/RO_
  PATO: http://purl.obolibrary.org/obo/PATO_
  skos: http://www.w3.org/2004/02/skos/core#
  dcterms: http://purl.org/dc/terms/
  x: http://example.org/

default_prefix: test
default_curi_maps:
  - semweb_context

enums:
  ActivationStateEnum:
    permissible_values:
      ACTIVATED:
        meaning: PATO:0002354
      INACTIVATED:
        meaning: PATO:0002355
slots:
  id:
    identifier: true
    range: uriorcurie
    required: true
    description: the CURIE or IRI of the focal element
  label:
    slot_uri: rdfs:label
    annotations:
      owl: AnnotationProperty, AnnotationAssertion
    description: a descriptive name/label for an element
    recommended: true
  definition:
    slot_uri: IAO:0000115
    annotations:
      owl: AnnotationProperty, AnnotationAssertion
    description: a human-readable definition of an element
    recommended: true
  source:
    slot_uri: dcterms:source
    multivalued: true
    description: origin of element or axiom
  definition_source:
    slot_uri: dcterms:source
    multivalued: true
    description: origin of textual definition
  logical_definition_source:
    slot_uri: dcterms:source
    multivalued: true
    description: origin of logical definition
  axiom_source:
    slot_uri: dcterms:source
    multivalued: true
    description: origin of axiom
  exactMatch:
    slot_uri: skos:exactMatch
    description: a concept that is the object of a match triple
    range: NamedThing
    annotations:
      owl: AnnotationProperty, AnnotationAssertion
  equivalent_to:
    slot_uri: owl:equivalentClasses
    range: NamedThing
    multivalued: true
    description: named class this is equivalent to
  subclass_of:
    slot_uri: rdfs:subclass_of
    range: NamedThing
    multivalued: true
    description: named class this is subclass of
  operands:
    range: NamedThing
    multivalued: true
  part_of:
    slot_uri: BFO:0000050
    #transitive: true
    range: NamedThing
    multivalued: true
    description: element this is a part of
  other_part_ofs:
    slot_uri: BFO:0000050
    range: NamedThing
    multivalued: true
    description: this slot is used to indicate other part-of relationships that are not in the logical definition
  has_part:
    slot_uri: BFO:0000051
    range: NamedThing
    multivalued: true
    inverse: part_of
    description: sub-elements

  subphenotype:
    range: Phenotype
  increased:
    is_a: subphenotype
  decreased:
    is_a: subphenotype
  abnormal:
    is_a: subphenotype

  #records:
  #  multivalued: true
  #  range: NamedThing
  #  inlined: true

classes:
  #Container:
  #  tree_root: true
  #  slots:
  #    - records

  Thing:
    abstract: true
    description: root node for all metaclasses
  NamedThing:
    is_a: Thing
    abstract: true
    description: generic grouping for classes, relations, individuals, and other named entities
    slots:
      - id
      - label
      - definition
  Anonymous:
    aliases:
      - blank node
    is_a: Thing
    description: abstract grouping for anonymous expressions
    abstract: true
    annotations:
      owl: Class
  NamedThingWithMatches:
    is_a: NamedThing
    description: test metaclass illustrating generation of skos annotation axioms
    slots:
      - exactMatch
    slot_usage:
      exactMatch:
        required: true
        annotations:
          owl: AnnotationAssertion
  NamedThingWithMatchesAsLiterals:
    is_a: NamedThing
    description: test metaclass illustrating generation of skos annotation axioms, forcing use of literals
    slots:
      - exactMatch
    slot_usage:
      exactMatch:
        description: we override the range to be a string
        range: string
        required: true
        annotations:
          owl: AnnotationAssertion
  DefinitionWithAxiomAnnotation:
    is_a: NamedThing
    description: test metaclass illustrating how a text definition can be adorned with annotation axioms, where values are literals
    slots:
      - definition_source
    slot_usage:
      definition:
        annotations:
          owl.axiom_annotation.slots: definition_source
  DefinitionWithIRIAxiomAnnotation:
    is_a: NamedThing
    description: test metaclass illustrating how a text definition can be adorned with annotation axioms, where the values are IRIs
    slots:
      - definition_source
    slot_usage:
      definition_source:
        range: NamedThing
      definition:
        annotations:
          owl.axiom_annotation.slots: definition_source
  Child:
    is_a: NamedThing
    description: test metaclass illustrating classes with basic superclass parents
    slots:
      - subclass_of
    slot_usage:
      subclass_of:
        required: true
        annotations:
          owl: SubClassOf
  ChildOfAnon:
    is_a: NamedThing
    description: test metaclass illustrating classes with parents that are class expressions
    slots:
      - subclass_of
    slot_usage:
      subclass_of:
        range: AnonPartOf
        annotations:
          owl: SubClassOf
  DirectEquivalent:
    is_a: NamedThing
    description: test metaclass illustrating simple equivalence between two named classes
    slots:
      - equivalent_to
    slot_usage:
      equivalent_to:
        required: true
        annotations:
          owl: EquivalentClasses
  ChildOfUnion:
    is_a: NamedThing
    description: test metaclass illustrating classes whose parents are a union
    slots:
      - subclass_of
    slot_usage:
      subclass_of:
        required: true
        annotations:
          owl: SubClassOf, UnionOf
  EquivUnion:
    is_a: NamedThing
    description: test metaclass illustrating classes defined by a union
    slots:
      - operands
    examples:
      - value: prokaryote
        description: a prokaryote is equivalent to a bacteria or an archaea
    slot_usage:
      operands:
        required: true
        description: elements of the union expression
        annotations:
          owl: EquivalentClasses, UnionOf
  DisjointUnion:
    is_a: NamedThing
    description: test metaclass illustrating classes defined by a disjoint union
    slots:
      - operands
    slot_usage:
      operands:
        required: true
        annotations:
          owl: DisjointUnionOf
  EquivIntersection:
    is_a: NamedThing
    description: test metaclass illustrating classes defined by a simple intersection of classes
    slots:
      - operands
    slot_usage:
      operands:
        required: true
        annotations:
          owl: EquivalentClasses, IntersectionOf
  EquivIntersectionWithAxiomAnnotation:
    is_a: NamedThing
    description: test metaclass illustrating classes defined by a simple intersection of classes, including an axion annotation
    slots:
      - operands
      - logical_definition_source
    slot_usage:
      operands:
        required: true
        annotations:
          owl: EquivalentClasses, IntersectionOf
          owl.axiom_annotation.slots: logical_definition_source
  Part:
    is_a: NamedThing
    description: test metaclass illustrating classes with basic heirarchical existential parents
    slots:
      - part_of
    slot_usage:
      part_of:
        required: true
        annotations:
          owl: ObjectSomeValuesFrom
  PartOnly:
    is_a: NamedThing
    description: test metaclass illustrating classes with basic part-of-allValues pattern
    slots:
      - part_of
    slot_usage:
      part_of:
        required: true
        annotations:
          owl: ObjectAllValuesFrom
  AnonPartOf:
    is_a: Anonymous
    slots:
      - part_of
    slot_usage:
      part_of:
        required: true
        annotations:
          owl: ObjectSomeValuesFrom
    annotations:
      owl: Class
  EquivGenusAndPartOf:
    is_a: NamedThing
    description: test metaclass illustrating basic simple genus-differentia style logical definition, including so-called GCIs
    slots:
      - subclass_of
      - part_of
      - other_part_ofs
    slot_usage:
      subclass_of:
        description: the genus of the definition
        required: true
        annotations:
          owl: EquivalentClasses, IntersectionOf
      part_of:
        required: true
        description: the part-of differentiae
        annotations:
          owl: EquivalentClasses, IntersectionOf, ObjectSomeValuesFrom
      other_part_ofs:
        required: false
        description: other parts ofs not in the differntating conditions (sometimes called hidden GCIs)
        annotations:
          owl: ObjectSomeValuesFrom
  EquivGenusAndPartOfWithAxiomAnnotation:
    is_a: NamedThing
    description: test metaclass illustrating basic simple genus-differentia style logical definition, including axiom annotation
    slots:
      - subclass_of
      - part_of
      - other_part_ofs
      - definition_source
      - logical_definition_source
      - axiom_source
    slot_usage:
      definition:
        annotations:
          owl.axiom_annotation.slots: definition_source
      subclass_of:
        required: true
        annotations:
          owl: EquivalentClasses, IntersectionOf
          owl.axiom_annotation.slots: logical_definition_source
      part_of:
        required: true
        annotations:
          owl: EquivalentClasses, IntersectionOf, ObjectSomeValuesFrom
          owl.axiom_annotation.slots: logical_definition_source
      other_part_ofs:
        required: false
        description: for hidden GCIs
        annotations:
          owl: ObjectSomeValuesFrom
          owl.axiom_annotation.slots: axiom_source
  ClassTemplateExample1:
    is_a: NamedThing
    description: test metaclass illustrating a trivial example of generating an axiom by a simple templated string
    slots:
      - subclass_of
      - part_of
      - other_part_ofs
    slot_usage:
      subclass_of:
        annotations:
          owl.fstring: SubClassOf({id} {V})

  ClassTemplateExample2:
    is_a: NamedThing
    description: test metaclass illustrating an example of generating multiple axioms by a jinja template
    slots:
      - subclass_of
      - part_of
      - other_part_ofs
    slot_usage:
      subclass_of:
        annotations:
          owl.template: |-
            {% for p in subclass_of %}SubClassOf({{id}} {{p}}){% endfor %}

  CollectionOfParts:
    is_a: NamedThing
    description: test metaclass illustrating a whole which has a collection of non-overlapping parts
    slots:
      - has_part
    annotations:
      owl.template: |-
        {% for p in has_part %}
        SubClassOf( {{id}} ObjectSomeValuesFrom( BFO:0000051 {{p}} ) )
        {% endfor %}
        DisjointClasses(
           Annotation( rdfs:label "all parts of {{id}} are part-disjoint")
          {% for p in has_part %}
          ObjectSomeValuesFrom( BFO:0000050 {{p}} )
          {% endfor %}
        )

  DefinedCollectionOfParts:
    is_a: NamedThing
    description: test metaclass illustrating a whole which is defined by a collection of non-overlapping parts
    slots:
      - has_part
    annotations:
      owl.template: |-
        EquivalentClasses( {{id}}
                           ObjectIntersectionOf(
                             {% for p in has_part %}
                               ObjectSomeValuesFrom( BFO:0000051 {{p}} )
                             {% endfor %}
                             ObjectAllValuesFrom( BFO:0000051
                                                  ObjectSomeValuesFrom( BFO:0000050
                                                    ObjectUnionOf(
                                                    {% for p in has_part %}
                                                      ObjectSomeValuesFrom( BFO:0000051 {{p}} )
                                                    {% endfor %} )
                                                  )
                                                )
                           )
                         )

  PartWithCounts:
    is_a: Anonymous
    description: test metaclass that generates anonymous classes used as part of a more complex class
    attributes:
      unit:
        range: NamedThing
        multivalued: false
        annotations:
          owl: SomeValuesFrom
      count:
        range: integer
        minimum_value: 1
        annotations:
          owl: HasValue
      state:
        range: ActivationStateEnum
        annotations:
          owl: SomeValuesFrom

  CollectionOfPartsWithCounts:
    is_a: NamedThing
    description: test metaclass that illustrates a complex nested multi-part structure, where a whole is defined by a collection of repeared parts in specified states
    slots:
      - has_part
    slot_usage:
      has_part:
        range: PartWithCounts
        inlined: true
    annotations:
      owl.template: |-
        {% for p in has_part %}
        SubClassOf( {{id}}
                    ObjectSomeValuesFrom( BFO:0000051
                                          ObjectIntersectionOf( {{p.unit }}
                                                                ObjectSomeValuesFrom(RO:0000053 {{p.state.meaning}})
                                                                {% if p.count %}
                                                                DataHasValue(PATO:0001555 "{{p.count}}"^^xsd:integer )
                                                                {% endif %}
                                                              )

                                         )
                  )
        {% endfor %}


  Phenotype:
    is_a: NamedThing

  SizeTriad:
    slots:
      - increased
      - decreased
      - abnormal
    annotations:
      owl.template: |-
        {{increased.id}}
